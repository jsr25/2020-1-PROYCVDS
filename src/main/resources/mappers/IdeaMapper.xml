<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.eci.cvds.samples.persistence.mybatisimpl.mappers.IdeaMapper">

    <select id='consultarIdea' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    LEFT JOIN palabrasclave as b
    ON a.nombreidea = b.nombreidea
    where b.palabrasclave =#{idea};
    </select>

    <select id="consultarVoto" parameterType="map" resultMap="IdeaResult2">
    select a.nombreidea ,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado,
    (a.nombreidea in (select nombreidea
                            from voto as b
							where b.loginusuario =#{login}) ) as valor
    from idea as a
;
    </select>

    <select id="consultarPalabrasClave" parameterType="map" resultMap="palabraResult">
    select a.nombreidea ,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado,
    from palabrasclave as a
    where nombreidea = #{idea}
;
    </select>




    <select id='consultarIdeaArea' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    where a.area=#{area};
    </select>

    <select id='consultarIdeaEnEspera' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    where a.login_Prop=#{login} and a.estado='en espera de revisi√≥n';
    </select>

    <select id='consultarIdeaPorEstado' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
	a.estado
    from  idea as a
    where a.estado = #{estado}
    </select>

    <select id='consultarIdea2' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    where a.nombreidea=#{idea};
    </select>

    <select id='consultarIdeasM' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    where (a.nombreidea=#{idea})=false;
    </select>

    <select id='consultarIdeaProponente' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a
    where (a.login_Prop=#{proponente})
    </select>

    <select id='consultarTodo' parameterType='map' resultMap='IdeaResult'>
    select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado
    FROM idea as a;
    </select>

    <select id='consultarRelacion' parameterType='map' resultMap='IdeaResult'>
     select a.nombreidea,
    a.descripcion,
    a.login_Prop,
    a.area,
    a.fecha,
    a.estado

    from idea as a
    where a.nombreidea in (select b.idearelacionada
							from relacion as b
						    where nombreidea='interventoria en sistemas');
    </select>

    <select id='consultarArea' parameterType='map' resultMap='areaResult'>
    select count(a.area) as cantidad ,
	a.area as area
	from idea as a
	group by a.area ;
    </select>

    <select id='consultarpalabe' parameterType='map' resultMap='palabraResult'>
    select a.nombreidea,
    a.palabrasclave
    FROM palabrasclave as a;
    </select>


    <update id="cambiarEstado" parameterType="map" >
        update idea
        set estado= #{estado}
        where #{idea.descripcion}=descripcion and #{idea.loginProponente}=login_Prop
    </update>

    <update id="actualizarIdea" parameterType="map" >
        update idea
        set descripcion = #{idea.descripcion}
        where #{idea.nombreIdea} = nombreidea
    </update>


    <insert id="registrarIdea" parameterType='map'>
        insert into idea(nombreidea,descripcion,fecha,login_Prop,area,estado)  values (#{idea.nombreIdea},#{idea.descripcion}, #{idea.fecha},#{idea.login_Prop},#{idea.area}, #{idea.estado});
    </insert>

    <insert id="registrarPalabraClave" parameterType='map'>
        insert into palabrasclave(nombreidea,palabrasclave) values(#{palabra.nombreIdea},#{palabra.valor})
    </insert>

    <insert id="registrarRelacion">
        insert into relacion(nombreidea,idearelacionada) values(#{nombreIdea1},#{nombreIdea2})
    </insert>

    <resultMap type='Idea' id='IdeaResult'>
        <id property='nombreIdea' column='nombreidea'/>
        <result property="descripcion" column="descripcion"/>
        <result property='loginProponente' column='login_Prop'/>
        <result property='area' column='area'/>
        <result property='fecha' column='fecha'/>
        <result property='estado' column='estado'/>

    </resultMap>
    <resultMap type='Idea' id='IdeaResult2'>
        <id property='nombreIdea' column='nombreidea'/>
        <result property="descripcion" column="descripcion"/>
        <result property='loginProponente' column='login_Prop'/>
        <result property='area' column='area'/>
        <result property='fecha' column='fecha'/>
        <result property='estado' column='estado'/>
        <result property="voto" column="valor"/>
    </resultMap>

    <resultMap type='PalabraClave' id='palabraResult'>
        <id property='nombreIdea' column='nombreidea'/>
        <result property="valor" column="palabrasclave"/>
    </resultMap>

    <resultMap type='Area' id='areaResult'>
        <id property='nombreArea' column='area'/>
        <result property="cantidadIdeas" column="cantidad"/>
    </resultMap>

</mapper>